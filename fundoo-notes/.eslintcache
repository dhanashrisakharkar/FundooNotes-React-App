[{"C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\index.js":"1","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\reportWebVitals.js":"2","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\App.js":"3","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Services\\service.js":"4","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\DrawerItem.jsx":"5","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\store.jsx":"6","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\pages\\ResetPassword\\resetpassword.jsx":"7","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\pages\\ForgetPassword\\ForgetPassword.jsx":"8","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\pages\\Login\\Login.jsx":"9","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\Drawer\\Drawer.jsx":"10","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\Dashboard\\dashboard.jsx":"11","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\pages\\Register\\Register.jsx":"12","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\AppBar\\Appbar.jsx":"13","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Services\\NoteService.js":"14","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\NoteFunction\\CreateNote\\createNote.jsx":"15","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\NoteFunction\\DisplayNote\\DisplayNotes.jsx":"16","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\NoteFunction\\DisplayIcon\\DisplayIcons.jsx":"17","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\NoteFunction\\ColorNote\\ColorPillate.jsx":"18","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\NoteFunction\\Reminder\\Reminder.jsx":"19","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\NoteFunction\\UpdateNote\\UpdateNote.jsx":"20","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\NoteFunction\\CreateNote\\Nots.jsx":"21"},{"size":500,"mtime":1609333551488,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":1124,"mtime":1610168205843,"results":"25","hashOfConfig":"23"},{"size":934,"mtime":1610035588716,"results":"26","hashOfConfig":"23"},{"size":896,"mtime":1609847286168,"results":"27","hashOfConfig":"23"},{"size":2690,"mtime":1609847383612,"results":"28","hashOfConfig":"23"},{"size":7668,"mtime":1610029410930,"results":"29","hashOfConfig":"23"},{"size":4510,"mtime":1609924371524,"results":"30","hashOfConfig":"23"},{"size":8448,"mtime":1609948067109,"results":"31","hashOfConfig":"23"},{"size":5122,"mtime":1610008668320,"results":"32","hashOfConfig":"23"},{"size":1291,"mtime":1610451640374,"results":"33","hashOfConfig":"23"},{"size":14988,"mtime":1609924319771,"results":"34","hashOfConfig":"23"},{"size":3483,"mtime":1609941051362,"results":"35","hashOfConfig":"23"},{"size":2023,"mtime":1610392268282,"results":"36","hashOfConfig":"23"},{"size":4439,"mtime":1610442509911,"results":"37","hashOfConfig":"23"},{"size":1646,"mtime":1610448147286,"results":"38","hashOfConfig":"23"},{"size":6532,"mtime":1610450618279,"results":"39","hashOfConfig":"23"},{"size":1847,"mtime":1610335330428,"results":"40","hashOfConfig":"23"},{"size":4874,"mtime":1610334749348,"results":"41","hashOfConfig":"23"},{"size":2382,"mtime":1610431506585,"results":"42","hashOfConfig":"23"},{"size":888,"mtime":1610393810171,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"kuw8b8",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\index.js",[],["100","101"],"C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\reportWebVitals.js",[],"C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\App.js",[],"C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Services\\service.js",["102"],"import axios from 'axios'\r\n\r\n\r\n let login = (data) => {\r\n    const URL = \"http://fundoonotes.incubation.bridgelabz.com/api/user/login\";\r\n    console.log(\"This is from service class\", data);\r\n    return axios.post(`${URL}`, data)\r\n  };\r\n\r\n let register = (data) => {\r\n    const URL = \"http://fundoonotes.incubation.bridgelabz.com/api/user/userSignUp\"\r\n    return axios.post( `${URL}`, data)\r\n}\r\n\r\n   let forgetpassword = (data) => {\r\n      const URL = \"http://fundoonotes.incubation.bridgelabz.com/api/user/reset\"\r\n      return axios.post( `${URL}`, data)\r\n}\r\n\r\nlet resetpassword = (data, token) => {\r\n   console.log(data,token)\r\n   const URL = \"http://fundoonotes.incubation.bridgelabz.com/api/user/reset-password\"\r\n return axios.post(`${URL}`, data, {\r\n   headers: {\r\n     Authorization: `${token}`,\r\n   },\r\n });\r\n};\r\n   // return axios.post( `${URL}`, data)\r\n\r\n\r\nexport default {  register , login , forgetpassword ,resetpassword  }","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\DrawerItem.jsx",["103"],"import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  listItemRoot: {\r\n    borderRadius: theme.spacing(0, 3, 3, 0)\r\n  },\r\n  listItemSelected: {\r\n    backgroundColor: `${theme.palette.secondary.light} !important`\r\n  }\r\n}));\r\n\r\nexport default function({ text, icon, isSelected, onClick }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      button\r\n      selected={isSelected}\r\n      classes={{\r\n        selected: classes.listItemSelected,\r\n        root: classes.listItemRoot\r\n      }}\r\n      onClick={onClick}\r\n    >\r\n      <ListItemIcon>{icon}</ListItemIcon>\r\n      <ListItemText primary={text} />\r\n    </ListItem>\r\n  );\r\n}",["104","105"],"C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\store.jsx",[],"C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\pages\\ResetPassword\\resetpassword.jsx",["106","107","108","109","110","111"],"import React, { Component } from \"react\";\r\nimport { Card, Typography, Button, CardContent, TextField } from '@material-ui/core/';\r\nimport \"./resetPassword.css\";\r\n//import axios from \"axios\";\r\n//import Input from \"../components/Input\";\r\nimport UserService from \"../../Services/service\";\r\n\r\n//var userservice = new UserService();\r\nexport default class EmailVerification extends Component {\r\n    nextPath(path) {\r\n        this.props.history.push(path);\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            password: \"\",\r\n            passwordError: \"\",\r\n            passwordFlag: false,\r\n            conformPassword: \"\",\r\n            conformPasswordError: \"\",\r\n            conformPasswordFlag: false,\r\n            setOpen: false,\r\n            open: false,\r\n\r\n        };\r\n    }\r\n    token = this.props.match.params.token;\r\n\r\n    change = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    validate = () => {\r\n        let isError = false;\r\n        const errors = {\r\n            passwordError: \"\",\r\n            passwordFlag: false,\r\n            conformPasswordError: \"\",\r\n            conformPasswordFlag: false,\r\n        };\r\n\r\n        if (this.state.password.length == 0) {\r\n            errors.passwordFlag = true;\r\n            errors.conformPasswordFlag = true;\r\n            isError = true;\r\n            errors.passwordError = \"Enter Password\";\r\n        }\r\n\r\n        if (this.state.conformPassword != this.state.password) {\r\n            errors.conformPasswordFlag = true;\r\n            isError = true;\r\n            errors.conformPasswordError = \"Passwords didn't match.\";\r\n        }\r\n\r\n        this.setState({\r\n            ...errors,\r\n        });\r\n\r\n        return isError;\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const err = this.validate();\r\n        if (!err) {\r\n            this.setState({\r\n                conformPasswordFlag: false,\r\n                conformPasswordError: \"\",\r\n                passwordFlag: false,\r\n                passwordError: \"\",\r\n                password: \"\",\r\n                conformPassword: \"\",\r\n            });\r\n            let resetPasswordData = {\r\n                newPassword: this.state.password,\r\n\r\n            };\r\n            UserService\r\n                .resetpassword(resetPasswordData, this.token).then((result) => {\r\n                    let obj = JSON.stringify(result);\r\n                    console.log(\"Password reset successful\" + obj);\r\n                    this.setState({ snackType: \"success\", snackMessage: \"Password reset successful\", open: true, setOpen: true })\r\n                    this.nextPath(\"../login\");\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Password reset Failed\" + error);\r\n                    this.setState({ snackType: \"error\", snackMessage: \"Password reset Failed\", open: true, setOpen: true })\r\n                });\r\n        } else {\r\n            console.log(\"Reset Failed\");\r\n        }\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        // console.log(this.state.email);\r\n\r\n\r\n        return (\r\n            <div className=\"wrapper-repeat\">\r\n\r\n                <Card id='verify-card'>\r\n\r\n                    <div className='label-page' >\r\n                        <Typography className=\"appName\" variant=\"h5\" color=\"textSecondary\" style={{ marginTop: 30 }}>\r\n                            <span style={{ color: \"#0606f8\" }}>F</span>\r\n                            <span style={{ color: \"#d10303\" }}>u</span>\r\n                            <span style={{ color: \"#f0b000\" }}>n</span>\r\n                            <span style={{ color: \"#0606f8\" }}>d</span>\r\n                            <span style={{ color: \"green\" }}>o</span>\r\n                            <span style={{ color: \"#d10303\" }}>o</span>\r\n                        </Typography>\r\n                        <div>\r\n                            <Typography className='label-text' align='center' variant='h5' component='h4' >Password Reset</Typography>\r\n                            <Typography className='label-text' component='p' value={this.state.password}\r\n                            ></Typography>\r\n                        </div>\r\n                    </div>\r\n                    <CardContent>{this.state.status ?\r\n                        (\r\n                            <div><Typography align='center' variant='h5' component='h4' >{this.state.message}</Typography>\r\n                                <Typography align='center' component='p' >Click On the Button to go to Login page</Typography>\r\n                                <Button fullWidth variant=\"contained\" color=\"primary\" type='submit'  >Login Page</Button>\r\n                            </div>\r\n                        )\r\n                        :\r\n                        (\r\n                            <div> <Typography align='center' variant='h5' component='h4' >Enter New Password</Typography>\r\n                                <div className=\" password-type\">\r\n                                    <TextField\r\n                                        height=\"8\"\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        className=\"input\"\r\n                                        label=\"Password\"\r\n                                        type=\"password\"\r\n                                        variant=\"outlined\"\r\n                                        name=\"password\"\r\n                                        onChange={this.getDataFromInput}\r\n                                        marginTop={3}\r\n                                        onChange={(e) => this.change(e)}\r\n                                        error={this.state.passwordFlag}\r\n                                        helperText={this.state.passwordError}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"repeat-password\">\r\n                                    <TextField\r\n                                        height=\"8\"\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        className=\"input\"\r\n                                        label=\"Conform\"\r\n                                        variant=\"outlined\"\r\n                                        type=\"password\"\r\n                                        name=\"conformPassword\"\r\n                                        onChange={this.getDataFromInput}\r\n                                        value={this.state.conformPassword}\r\n                                        helperText={this.state.conformPasswordError}\r\n                                        error={this.state.conformPasswordFlag}\r\n                                        onChange={(e) => this.change(e)}\r\n\r\n                                    />\r\n                                </div>\r\n                                <div className='form-btn'>\r\n                                    <Button fullWidth variant=\"contained\" color=\"secondary\" type='submit' onClick={(e) => this.onSubmit(e)}>Reset</Button></div></div>\r\n                        )}\r\n                        <div className=\"forgot-password \">\r\n                            <p align=\"center\">\r\n                                <a href=\"/\">log in</a>\r\n                            </p>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\pages\\ForgetPassword\\ForgetPassword.jsx",["112","113","114","115"],"import React from \"react\";\r\nimport \"./forgetpassword.css\";\r\nimport userServices from \"../../Services/service\";\r\nimport { TextField, Card, Grid } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n//import Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst regexValidateEmail = new RegExp(\r\n  /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$$/\r\n);\r\n\r\nclass ForgetPassword extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    email:\"\",\r\n    forgetMsg:\"\",\r\n\r\n    errorValid:{\r\n      email:false,\r\n\r\n    },\r\n    errors:{\r\n      email:\"\",\r\n    },\r\n  };\r\n    \r\n  }\r\n  handleEmailInput = (event) => {\r\n     event.preventDefault();\r\n    this.setState({\r\n      email: event.target.value,\r\n    });\r\n    let errors = this.state.errors;\r\n    let validate = false;\r\n    if (!regexValidateEmail.test(this.state.email)) {\r\n      errors.email = \"email is not valid\";\r\n      validate = true;\r\n    } else {\r\n      errors.email = \"\";\r\n    }\r\n    this.setState({\r\n      errorValid: { email: validate },\r\n      errors: { email: errors.email },\r\n    });\r\n  };\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    let errs = {};\r\n    let formIsValid = true;\r\n    // let errors = this.state.errors\r\n    this.setState({\r\n      email: \"\",\r\n    })\r\n    formIsValid = \"msg has been send\"\r\n    const errors = this.state.errors;\r\n    if ( errors.email || this.state.email === \"\") {\r\n      this.setState({\r\n        forgetMsg: true,\r\n        forgetMsg: \"Enter proper email-ID.   \",\r\n        \r\n      });\r\n      formIsValid = false;\r\n      errs[\"email\"] = \"* required  valid mail id\";\r\n     } \r\n     // else{\r\n    //   this.state.email;\r\n    // }\r\n    // } else {\r\n    //   let sendData = {\r\n    //     \"email\": this.state.email,\r\n    //   };\r\n    let sendData = {\r\n           \"email\": this.state.email,\r\n         };\r\n         console.log(sendData)\r\n\r\n      userServices.forgetpassword(sendData)\r\n        .then((response) => {\r\n          if (response === 200) {\r\n            this.setState({\r\n              forgetOpen: true,\r\n\r\n            });\r\n            this.forgetMsg = \"mail has sent\";\r\n            this.props.history.push(\"/login\");\r\n          } else {\r\n            this.setState({\r\n              forgetOpen: true,\r\n\r\n            });\r\n            this.forgetOpen = \"msg not sent\";\r\n          }\r\n        })\r\n        .catch();\r\n\r\n\r\n    }\r\n  \r\n  render() {\r\n    return (\r\n      \r\n      <div className=\"wrapper-forget\">\r\n        <Card className=\"form-card\">\r\n          <div className=\"forget_Form\">\r\n\r\n            <Typography className=\"app_name\" variant=\"h5\" color=\"textSecondary\" style={{ marginTop: 30 }}>\r\n              <span style={{ color: \"#0606f8\" }}>F</span>\r\n              <span style={{ color: \"#d10303\" }}>u</span>\r\n              <span style={{ color: \"#f0b000\" }}>n</span>\r\n              <span style={{ color: \"#0606f8\" }}>d</span>\r\n              <span style={{ color: \"green\" }}>o</span>\r\n              <span style={{ color: \"#d10303\" }}>o</span>\r\n            </Typography>\r\n\r\n            <Grid item xs={12} >\r\n              <Grid style={{ marginTop: 8, marginBottom: 10 }} container justify=\"center\">\r\n                <div className=\"firstName\">\r\n                  <TextField\r\n                    required\r\n                    variant=\"outlined\"\r\n                    label=\"Email\"\r\n                    type=\"text\"\r\n                    id=\"emailForg\"\r\n                    value={this.state.email}\r\n\r\n                    error={this.state.errorValid.email}\r\n                    \r\n                    onChange={this.handleEmailInput}\r\n                    helperText={this.state.errors[\"email\"]}\r\n                  />\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            <div className=\"createAccount\">\r\n              <Grid container justify=\"center\">\r\n                <Button\r\n                  type=\"submit\"\r\n\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  // background-color=\"deepskyblue\"\r\n                  onClick={this.onSubmit}\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n              </Grid>\r\n              <Grid >\r\n\r\n                <p align=\"left\" className=\"forgotPassword \">\r\n                  <a href=\"/\">log in</a>\r\n                </p>\r\n\r\n              </Grid>\r\n            </div>\r\n\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgetPassword;","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\pages\\Login\\Login.jsx",["116","117","118","119","120","121"],"//import Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Services from \"../../Services/service\";\r\n//import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n//import Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\n//import FormRow from \"@material-ui/core/FormRow\";\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\n//import { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Card } from '@material-ui/core';\r\nimport \"./login.css\"\r\nimport { withRouter } from 'react-router';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        emailError: \"\",\r\n        emailFlag: false,\r\n        passwordError: \"\",\r\n        passwordFlag: false,\r\n        showPassword: false,\r\n        snackbarOpen: false,\r\n          snackbarMessage: \"\",\r\n      };\r\n      }\r\n    \r\n      nextPath(path) {\r\n        this.props.history.push(path);\r\n      }\r\n    \r\n      \r\n    \r\n      clickShowPass = () => {\r\n        this.setState({\r\n          ...this.state,\r\n          showPassword: !this.state.showPassword,\r\n        });\r\n      };\r\n    \r\n      change = (e) => {\r\n        this.setState({\r\n          [e.target.name]: e.target.value,\r\n        });\r\n      };\r\n    \r\n      validate = () => {\r\n        let isError = false;\r\n        const errors = {\r\n          emailError: \"\",\r\n          emailFlag: false,\r\n          passwordError: \"\",\r\n          passwordFlag: false,\r\n        };\r\n    \r\n        if (this.state.email.length == 0) {\r\n          errors.emailFlag = true;\r\n          isError = true;\r\n          errors.emailError = \"Enter your Email \";\r\n        }\r\n        if (!/[a-zA-Z0-9._]+[@]{1}[a-zA-Z120-9]*[.]{1}[a-zA-Z]*$/.test(this.state.email)) {\r\n          errors.emailFlag = true;\r\n          isError = true;\r\n          errors.emailError = \"Please Enter Correct Email\";\r\n        }\r\n        if (this.state.password.length == 0) {\r\n          errors.passwordFlag = true;\r\n          isError = true;\r\n          errors.passwordError = \"Enter Password\";\r\n        }\r\n    \r\n        this.setState({\r\n          ...errors,\r\n        });\r\n    \r\n        return isError;\r\n      };\r\n      SnackbarClose = (e) => {\r\n        this.setState({ snackbarOpen: false });\r\n      };\r\n    \r\n      handleCloseSnackbar = () => {\r\n        this.setState({ snackbarOpen: false });\r\n      };\r\n    \r\n      onSubmit = (event) => {\r\n        event.preventDefault();\r\n        const err = this.validate();\r\n        if (!err) {\r\n          this.setState({\r\n            email: \"\",\r\n            emailFlag: false,\r\n            emailError: \"\",\r\n            password: \"\",\r\n            passwordFlag: false,\r\n            passwordError: \"\",\r\n          });\r\n          let loginData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n          };\r\n          Services\r\n            .login(loginData)\r\n            .then((response) => {\r\n              if (response.status === 200) {\r\n                this.setState({\r\n                  snackbarOpen: true,\r\n                  snackbarMessage: \"Login Succesfully.\",\r\n                });\r\n                localStorage.setItem(\"token\", response.data.id);\r\n                setTimeout(() => {\r\n                  this.props.history.push(\"/dashboard\");\r\n                }, 2000);\r\n              } else {\r\n                this.setState({\r\n                  snackbarOpen: true,\r\n                  snackbarMessage: \"Enter correct credentials\",\r\n                });\r\n              }\r\n            })\r\n            .catch();\r\n        }\r\n      };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper-tool\">\r\n            <Card id='form'>\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <div className=\"paper\">\r\n                        {/* <Avatar className=\"Avtar\">\r\n                            <LockOutlinedIcon />\r\n                        </Avatar> */}\r\n                        <Typography component=\"h1\" variant=\"h5\" className=\"head\">\r\n                            Sign In\r\n                         </Typography>\r\n                        <form className=\"form\">\r\n                            <Grid container spacing={4}>\r\n\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"email\"\r\n                                        label=\"Email Address\"\r\n                                        name=\"email\"\r\n                                        autoComplete=\"email\"\r\n                                        value={this.state.email}\r\n                                        helperText={this.state.emailError}\r\n                                        error={this.state.emailFlag}\r\n                                        onChange={(e) => this.change(e)}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"password\"\r\n                                        label=\"password\"\r\n                                        name=\"password\"\r\n                                        autoComplete=\"current-password\"\r\n                                        value={this.state.password}\r\n                onChange={(e) => this.change(e)}\r\n                error={this.state.passwordFlag}\r\n                helperText={this.state.passwordError}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid >\r\n\r\n\r\n                            <Grid style={{ marginTop: 8, marginBottom: 10 }} >\r\n                                <Grid style={{ padding: 5 }} container justify=\"flex-end\" >\r\n                                    <Button\r\n                                        type=\"submit\"\r\n\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        background-color=\"deepskyblue\"\r\n                                        onClick={(e) => this.onSubmit(e)}\r\n\r\n                                    >\r\n                                        Sign In\r\n                            </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid className=\"extra-tool\"  >\r\n                                <Grid container justify=\"flex-start\">\r\n\r\n                                    <Grid item >\r\n\r\n                                        <Link href=\"http://localhost:4200/register\" color=\"textPrimary\" >\r\n\r\n                                            create account\r\n                                        </Link>\r\n\r\n\r\n                                    </Grid >\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container justify=\"flex-end\" justify  style={{ marginTop: 8, marginBottom: 10 }} className=\"link\" style={{ padding: -1 }}>\r\n                                \r\n                                    <Link href=\"http://localhost:4200/forgetPassword\" color=\"textPrimary\" >\r\n\r\n                                        forget password\r\n                                        </Link>\r\n                                \r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                    <Box mt={5}>\r\n\r\n                    </Box>\r\n                </Container>\r\n            </Card >\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(Login);","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\Drawer\\Drawer.jsx",["122","123","124","125","126","127","128","129","130"],"import React , { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport \"./Drawer.css\"\r\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\r\nimport AddAlertIcon from '@material-ui/icons/AddAlert';\r\nimport ArchiveIcon from '@material-ui/icons/Archive';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Divider, List, ListItem, Typography, ListItemIcon, ListItemText } from '@material-ui/core/';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport \"./Drawer.css\"\r\n\r\nconst drawerWidth = 240;\r\nvar checkOpen = \"close\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n\r\n    content: {\r\n\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n\r\n    root: {\r\n        display: 'flex',\r\n        height: 3,\r\n    },\r\n\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        top: 62,\r\n    },\r\n    header: {\r\n        width: 200,\r\n    },\r\n\r\n    appBar: {\r\n        width: 500,\r\n    },\r\n}))\r\nfunction DrawerNavigator(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    return (\r\n        <div className={classes.root}>\r\n            <Drawer open={props.drawerOpenClose}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n                anchor=\"left\">\r\n                <List>\r\n                    <div className=\"notes\">\r\n                        <ListItem >\r\n                            <ListItemIcon>\r\n                                <EmojiObjectsIcon className=\"Notes\" >\r\n                                </EmojiObjectsIcon>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary='Notes' />\r\n                        </ListItem>\r\n                    </div>\r\n                    <div className=\"reminder\">\r\n                        <ListItem  >\r\n                            <ListItemIcon>\r\n                                <AddAlertIcon className=\"Reminder\">\r\n\r\n                                </AddAlertIcon>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary='Reminder' />\r\n                        </ListItem>\r\n                    </div>\r\n                    <div className=\"Edit-Label\">\r\n                        <ListItem >\r\n                            <ListItemIcon>\r\n                                <EditIcon className=\"Edit Label\">\r\n                                </EditIcon>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary='Edit-Label' />\r\n                        </ListItem>\r\n                    </div>\r\n                    <div className=\"archive\">\r\n                        <ListItem >\r\n                            <ListItemIcon>\r\n                                <ArchiveIcon className=\"Archive\">\r\n                                </ArchiveIcon>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary='Archive' />\r\n                        </ListItem>\r\n                    </div>\r\n                    <div className=\"bin\">\r\n                        <ListItem  >\r\n                            <ListItemIcon>\r\n                                <DeleteIcon className=\"Bin\">\r\n                                </DeleteIcon>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary='Bin' />\r\n                        </ListItem>\r\n                    </div>\r\n                </List>\r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            ></main>\r\n        </div>\r\n    )\r\n}\r\nexport default DrawerNavigator;\r\n\r\n","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\Dashboard\\dashboard.jsx",["131"],"C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\pages\\Register\\Register.jsx",["132","133","134","135","136","137"],"import React, { Component } from 'react';\r\nimport \"./signup.css\"\r\n//import Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n//import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n//import Checkbox from '@material-ui/core/Checkbox';\r\n// import Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport signUp from \"../../Services/service\";\r\n//import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\n//import { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Card , Checkbox} from '@material-ui/core';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\n\r\nconst regexValidateEmail = new RegExp(\r\n  /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$$/\r\n);\r\nconst regexvalidatePassword = new RegExp(\r\n  /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/\r\n);\r\nconst regexvalidateName = new RegExp(/^[A-Z]{1}[a-z]{3,}$/);\r\n\r\nclass Register extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      Rpassword: \"\",\r\n      errorValid: {\r\n        firstName: false,\r\n        lastName: false,\r\n        email: false,\r\n        password: false,\r\n        Rpassword: false,\r\n        showPassword : false,\r\n      },\r\n      enable: true,\r\n      service: \"advance\",\r\n      errors: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        Rpassword: \"\",\r\n      },\r\n    };\r\n  }\r\n  clickShowPass= () => {\r\n    this.setState({\r\n      ...this.state,\r\n      showPassword:!this.state.showPassword,\r\n    });\r\n  };\r\n\r\n  handleFirstNameInput = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      firstName: event.target.value,\r\n    });\r\n    let errors = this.state.errors;\r\n    let validate = false;\r\n    if (!regexvalidateName.test(this.state.firstName)) {\r\n      errors.firstName = \"firstName is not valid\";\r\n      validate = true;\r\n    } else {\r\n      errors.firstName = \"\";\r\n    }\r\n    this.setState({\r\n      errorValid: { firstName: validate },\r\n      errors: { firstName: errors.firstName },\r\n    });\r\n  };\r\n  handleLastNameInput = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      lastName: event.target.value,\r\n    });\r\n    let errors = this.state.errors;\r\n    let validate = false;\r\n    if (!regexvalidateName.test(event.target.value)) {\r\n      errors.lastName = \"lastName is not valid\";\r\n      validate = true;\r\n    } else {\r\n      errors.lastName = \"\";\r\n    }\r\n    this.setState({\r\n      errorValid: { lastName: validate },\r\n      errors: { lastName: errors.lastName },\r\n    });\r\n  };\r\n\r\n  handleEmailInput = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      email: event.target.value,\r\n    });\r\n    let errors = this.state.errors;\r\n    let validate = false;\r\n    if (!regexValidateEmail.test(event.target.value)) {\r\n      errors.email = \"email is not valid\";\r\n      validate = true;\r\n    } else {\r\n      errors.email = \"\";\r\n    }\r\n    this.setState({\r\n      errorValid: { email: validate },\r\n      errors: { email: errors.email },\r\n    });\r\n  };\r\n  handlePasswordInput = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      password: event.target.value,\r\n    });\r\n    let errors = this.state.errors;\r\n    let validate = false;\r\n    if (!regexvalidatePassword.test(event.target.value)) {\r\n      errors.password =\r\n        \"password is not valid\";\r\n      validate = true;\r\n    } else {\r\n      errors.password = \"\";\r\n    }\r\n    this.setState({\r\n      errorValid: { password: validate },\r\n      errors: { password: errors.password },\r\n    });\r\n  };\r\n  handleReapetPasswordInput = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      hidePassword: true,\r\n      Rpassword: event.target.value,\r\n      icEye: 'visibility-off',\r\n    });\r\n    let errors = this.state.errors;\r\n    let validate = false;\r\n    if (this.state.password !== this.state.Rpassword) {\r\n\r\n      errors.Rpassword =\r\n        \"password did not match\";\r\n      validate = true;\r\n\r\n    } else if (this.state.password === this.state.Rpassword) {\r\n      errors.Rpassword = true;\r\n    }\r\n    this.setState({\r\n\r\n      errorValid: { Rpassword: validate },\r\n      errors: { Rpassword: errors.Rpassword },\r\n    });\r\n   \r\n  };\r\n\r\n\r\n  handleSubmit = (event) => {\r\n    if (\r\n      this.state.email === \"\" &&\r\n      this.state.password === \"\" &&\r\n      this.state.firstName === \"\" &&\r\n      this.state.lastName === \"\"\r\n    ) {\r\n      this.setState({\r\n        errorValid: {\r\n          email: true,\r\n          password: true,\r\n          firstName: true,\r\n          lastName: true,\r\n        },\r\n        errors: {\r\n          email: \"email not be empty\",\r\n          password:\r\n            \"password not be empty\",\r\n          firstName: \"firstname not be empty\",\r\n          lastName: \"lastname not be empty\",\r\n        },\r\n      });\r\n    }\r\n\r\n    if (this.validateForm() && this.state.email !== \"\" && this.state.password !== \"\" && this.state.lastName !== \"\" && this.state.firstName !== \"\") {\r\n      console.log(\"valid form\");\r\n      let signUpData = {\r\n        firstName: this.state.firstName,\r\n        lastName: this.state.lastName,\r\n        service: this.state.service,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      };\r\n      signUp(signUpData).then((response) => {\r\n        console.log(response);\r\n      });\r\n      { String(this.props.history.push(\"/login\")) };\r\n\r\n      // this.setState({\r\n      //   email: \"\",\r\n      //   firstName: \"\",\r\n      //   lastName: \"\",\r\n      //   password: \"\",\r\n      // });\r\n    } else {\r\n      console.log(\"invalid form\");\r\n    }\r\n\r\n  };\r\n\r\n  validateForm() {\r\n    let valids = true;\r\n    Object.values(this.state.errors).forEach(\r\n      (val) => val.length > 0 && (valids = false)\r\n    );\r\n    return valids;\r\n  }\r\n  handleBackSubmit() {\r\n    this.props.history.push(\"/login\");\r\n  }\r\n  handleClickShowPassword = () => {\r\n    this.setState({ showPassword: !this.state.showPassword })\r\n};\r\n\r\nhandleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <Card id='formcard'>\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className=\"paper\">\r\n              {/* <Avatar className=\"Avtar\">\r\n                            <LockOutlinedIcon />\r\n                        </Avatar> */}\r\n                        <Typography className=\"app_name\" variant=\"h5\" color=\"textSecondary\">\r\n          <span style={{ color: \"#0606f8\" }}>F</span>\r\n              <span style={{ color: \"#d10303\" }}>u</span>\r\n              <span style={{ color: \"#f0b000\" }}>n</span>\r\n              <span style={{ color: \"#0606f8\" }}>d</span>\r\n              <span style={{ color: \"green\" }}>o</span>\r\n              <span style={{ color: \"#d10303\" }}>o</span>\r\n          </Typography>\r\n          \r\n              <Typography component=\"h1\" variant=\"h5\" className=\"header\">\r\n              <div className=\"header-content\">\r\n                Sign up\r\n                </div>\r\n                    </Typography>\r\n              <form className=\"form\">\r\n                <div className=\"address\">\r\n                  <Grid container spacing={2}>\r\n\r\n                    <Grid item xs={12} sm={6} style={{ marginTop: 3, marginBottom: 3 , marginRight:-20 , marginLeft: -5}}>\r\n                      <div  className=\"name\">\r\n                        <div className=\"first-Name\">\r\n                        <TextField\r\n                         height=\"100\"\r\n                          autoComplete=\"fname\"\r\n                          name=\"firstName\"\r\n                          variant=\"outlined\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"firstName\"\r\n                          label=\"First Name\"\r\n                          autoFocus=\"fname\"\r\n                          value={this.state.firstName}\r\n                          error={this.state.errorValid.firstName}\r\n                          onChange={this.handleFirstNameInput}\r\n                          helperText={this.state.errors[\"firstName\"]}\r\n                        />\r\n                        </div>\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid  item xs={12} sm={6} style={{ marginTop: 2, marginBottom: 3 ,marginLeft:20 , marginRight:-30}}>\r\n                      <div  className=\"last-name\">\r\n                      <div  className=\"first-Name\">\r\n                        <TextField\r\n                         height=\"8\"\r\n                          variant=\"outlined\"\r\n                          required\r\n                          fullWidth\r\n                          id=\"lastName\"\r\n                          label=\"Last Name\"\r\n                          name=\"lastName\"\r\n                          autoComplete=\"lname\"\r\n                          value={this.state.lastName}\r\n                          error={this.state.errorValid.lastName}\r\n                          onChange={this.handleLastNameInput}\r\n                          helperText={this.state.errors[\"lastName\"]}\r\n                        />\r\n                        </div>\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid item xs={12}  >\r\n                      <Grid style={{ marginTop: 25, marginBottom: 3 ,marginLeft:-3}} >\r\n                        <div className=\"email-address\">\r\n                          <div className=\"first-Name\" >\r\n                          <TextField\r\n                           height=\"8\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            value={this.state.email}\r\n                            error={this.state.errorValid.email}\r\n                            onChange={this.handleEmailInput}\r\n                            helperText={this.state.errors[\"email\"]}\r\n                          />\r\n                          </div>\r\n                        </div>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={12} >\r\n                      <Grid  style={{ marginTop: 25, marginBottom: 3 ,marginLeft:-3 ,height:5}}>\r\n                        <div  className=\"passwrord-Id\">\r\n                          <div className=\"first-Name\">\r\n                          <TextField\r\n                            height=\"8\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"password\"\r\n                            label=\"password\"\r\n                            name=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            value={this.state.password}\r\n                            error={this.state.errorValid.password}\r\n                            onChange={this.handlePasswordInput}\r\n                            helperText={this.state.errors[\"password\"]}\r\n                            type={this.state.showPassword ? 'text' : 'password'}\r\n                            InputProps={{\r\n                              endAdornment: <InputAdornment position=\"end\">  <IconButton\r\n                                  aria-label=\"toggle password visibility\"\r\n                                  onClick={this.handleClickShowPassword}\r\n                                  onMouseDown={this.handleMouseDownPassword}\r\n                                  edge=\"end\"\r\n                              >\r\n                                  {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                              </IconButton> </InputAdornment>,\r\n                          }}\r\n                          />\r\n                          </div>\r\n\r\n                        </div>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}  >\r\n                      <Grid style={{ marginTop: 55, marginBottom: 3 , marginLeft:-6 }}>\r\n                        <div  className=\"first-Name\">\r\n                          <div >\r\n                          <TextField\r\n                          className=\"repeat-password\"\r\n                           height=\"8\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"rpassword\"\r\n                            label=\"confirm Password\"\r\n                            type=\"rpassword\"\r\n                            id=\"rpassword\"\r\n                            autoComplete=\"current-password\"\r\n                            // value={this.state.Rpassword}\r\n                            error={this.state.errorValid.Rpassword}\r\n                            onChange={this.handleReapetPasswordInput}\r\n                            helperText={this.state.errors[\"Rpassword\"]}\r\n                            type=\"text\"\r\n                            type={this.state.showPassword ? 'text' : 'password'}\r\n                          />\r\n                          </div>\r\n                          \r\n                        </div>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                  </Grid >\r\n                   \r\n                  <div className=\"createAccount\">\r\n                  <Grid  style={{ marginTop: 45, marginLeft: -1  }}>\r\n                    <div className=\"Button\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                    // background-color=\"deepskyblue\"\r\n                    >\r\n                      Sign Up\r\n                </Button>\r\n                </div>\r\n                </Grid>\r\n\r\n                    <div className=\"forgot-password \">\r\n                      <p align=\"left\">\r\n                        Already registered ? <a href=\"http://localhost:4200/\">log in</a>\r\n                      </p>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <Box mt={2}>\r\n\r\n            </Box>\r\n          </Container>\r\n        </Card >\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Register);  ","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\AppBar\\Appbar.jsx",["138","139","140"],"import React from \"react\";\r\nimport \"./Appbar.css\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport icon from \"../assets/icons/keep.icon.png\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SettingsSharpIcon from '@material-ui/icons/SettingsOutlined';\r\nimport DnsRoundedIcon from \"@material-ui/icons/DnsRounded\";\r\nimport ReplayOutlinedIcon from \"@material-ui/icons/ReplayOutlined\";\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircle';\r\nimport AppsRoundedIcon from \"@material-ui/icons/AppsRounded\";\r\nimport Sidebar from \"../Drawer/Drawer\";\r\n\r\nvar checkOpen = \"close\";\r\n\r\nexport default function ToolBar() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const drawerOpenClose = () => {\r\n    if (checkOpen == \"open\") {\r\n      setOpen(false);\r\n      checkOpen = \"close\";\r\n    } else if (checkOpen == \"close\") {\r\n      setOpen(true);\r\n      checkOpen = \"open\";\r\n    }\r\n    console.log(checkOpen);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <AppBar position=\"fixed\" color=\"transparent\" >\r\n        <Toolbar className=\"topBar\">\r\n          <div className=\"startOptions\">\r\n            <div className=\"menuButton\">\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={drawerOpenClose}\r\n                edge=\"start\"\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n            </div>\r\n            <div className=\"headerIcon\">\r\n              <img className=\"headerIcon\" src={icon} />\r\n            </div>\r\n            <div className=\"headerTitle\">FUNDOO</div>\r\n          </div>\r\n          <div className=\"search\">\r\n            <div className=\"searchIcon\">\r\n              <div className=\"searchIcon\">\r\n                <SearchIcon />\r\n              </div>\r\n            </div>\r\n            <InputBase\r\n              className=\"searchInput\"\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: \"inputRoot\",\r\n                input: \"inputInput\",\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </div>\r\n          <div className=\"buttonContainer\">\r\n            <div className=\"button\">\r\n              <IconButton aria-label=\"open drawer\">\r\n                <ReplayOutlinedIcon />\r\n              </IconButton>\r\n            </div>\r\n            <div className=\"button\">\r\n              <IconButton aria-label=\"open drawer\">\r\n                <DnsRoundedIcon />\r\n              </IconButton>\r\n            </div>\r\n            <div className=\"button\">\r\n              <IconButton aria-label=\"open drawer\">\r\n                <SettingsSharpIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          <div className=\"appsContainer\">\r\n            <div className=\"button\">\r\n              <IconButton aria-label=\"open drawer\">\r\n                <AppsRoundedIcon />\r\n              </IconButton>\r\n            </div>\r\n            <div className=\"button\">\r\n              <IconButton aria-label=\"open drawer\">\r\n                <AccountCircleOutlinedIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Sidebar drawerOpenClose={open} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Services\\NoteService.js",["141"],"import axios from 'axios'\r\n\r\nlet addNote = (data , token) => {\r\n    console.log(data.token)\r\n    const URL = \"http://fundoonotes.incubation.bridgelabz.com/api/notes/addNotes\"\r\n    return axios.post(`${URL}`, data, {\r\n       headers: {\r\n         Authorization: localStorage.getItem('token'),\r\n       },\r\n     });\r\n }\r\n let getAllNotes = (token) => {\r\n  console.log(token)\r\n  const URL = \"http://fundoonotes.incubation.bridgelabz.com/api/notes/getNotesList\"\r\n  return axios.get(`${URL}`, {\r\n   headers: {\r\n     Authorization: localStorage.getItem('token'),\r\n   },\r\n });\r\n}\r\nlet trashNotes = (data,token) => {\r\n  console.log(token)\r\n  const URL = \"http://fundoonotes.incubation.bridgelabz.com/api/notes/trashNotes\"\r\n  return axios.post(`${URL}`, data, {\r\n   headers: {\r\n     Authorization: localStorage.getItem('token'),\r\n   },\r\n });\r\n}\r\n\r\nlet updateNotes = (data, token) => {\r\n  console.log(token)\r\n  const URL = \"http://fundoonotes.incubation.bridgelabz.com/api/notes/updateNotes\"\r\n  return axios.post(`${URL}`, data, {\r\n   headers: {\r\n     Authorization: localStorage.getItem('token'),\r\n   },\r\n });\r\n}\r\n\r\n\r\nexport const addReminder = (data) => {\r\n  console.log(data)\r\n  const URL = \"http://fundoonotes.incubation.bridgelabz.com/api/notes/addUpdateReminderNotes\"\r\n  return axios.post(`${URL}`, {\r\n   headers: {\r\n     Authorization: localStorage.getItem('token'),\r\n   },\r\n });\r\n}\r\n\r\n\r\nexport const updateNoteColor = (data , token) => {\r\n  const URL = \"http://fundoonotes.incubation.bridgelabz.com/api/notes/changesColorNotes\"\r\n  return axios.post(`${URL}`, data,{\r\n    headers: {\r\n      Authorization: localStorage.getItem('token'),\r\n    },\r\n  });\r\n}\r\n\r\nexport const getTrashNoteList   = ( token) => {\r\n  const URL = \"http://fundoonotes.incubation.bridgelabz.com/api/notes/getNotesList\"\r\n  return axios.get(`${URL}`,{\r\n    headers: {\r\n      Authorization: localStorage.getItem('token'),\r\n    },\r\n  });\r\n}\r\n\r\n export default{addNote , getAllNotes , trashNotes , updateNotes , addReminder , updateNoteColor , getTrashNoteList }","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\NoteFunction\\CreateNote\\createNote.jsx",["142","143","144","145"],"import React , { useState, useContext } from \"react\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ImageOutlinedIcon from '@material-ui/icons/ImageOutlined';\r\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined';\r\nimport BrushIcon from '@material-ui/icons/Brush';\r\nimport Button from '@material-ui/core/Button';\r\nimport NoteServices from \"../../../Services/NoteService\"\r\nimport \"./CreateNote.css\";\r\nimport DisplayIcons from \"../DisplayIcon/DisplayIcons\";\r\n\r\n// import CardActions from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  titleInput: {\r\n    padding: \"10px 15px\",\r\n    width: \"70%\",\r\n  },\r\n  noteInput: {\r\n    padding: \"10px 15px\",\r\n  },\r\n  input: {},\r\n\r\n  Checkbox: {\r\n    marginLeft: 5,\r\n    [theme.breakpoints.down(660)]: {\r\n      padding: \"0.3rem\",\r\n    },\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(16),\r\n      height: theme.spacing(16),\r\n    },\r\n  },\r\n}));\r\nexport default function AddNote({GetNote} ) {\r\n   const [open, setOpen] = useState(true);\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [description, setDescription] =React.useState(\"\");\r\n  const classes = useStyles();\r\n  const [pin, setPin] = useState(false)\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [bgColor, setBgColor] = useState('#fff')\r\n  const id = ''\r\n\r\n\r\n  let addNote = () => {\r\n    const data = new FormData();\r\n    console.log(data)\r\n    data.append(\"title\", title);\r\n    data.append(\"description\", description);\r\n    data.set(\"color\", bgColor);\r\n    if (title !== \"\" && description !== \"\") {\r\n      setLoading(true);\r\n      NoteServices.addNote(data )\r\n        .then(() => {\r\n          // setLoading(false);\r\n          GetNote()\r\n          setBgColor('#fff')\r\n          setLoading ({\r\n            \r\n            title : \" \",\r\n            description : \" \"\r\n          })\r\n          console.log(\"Note added Sucessfully\")\r\n        })\r\n        .catch(() => {\r\n          // setLoading(false);\r\n         \r\n          console.log(\"Some Error Occured while processing request\")\r\n        });\r\n    } else {\r\n      \r\n      console.log(\"Title and description cannot be empty\")\r\n    }\r\n  };\r\n\r\n  // const updateNotes = () => {\r\n  //   let formData = new FormData()\r\n  //   formData.append('title', title)\r\n  //   formData.append('description', description)\r\n  //   formData.append('noteId', item.id)\r\n  //   updateNoteTitleDescription(formData).then(\r\n  //     ()=> {setRefresh(Math.random)}\r\n  //   )\r\n  //   .catch(err=>{\r\n  //     console.warn(\"error\", err);\r\n  //   })\r\n  // }\r\n\r\n\r\n  const handlePin = () => {\r\n    setPin(true)\r\n}\r\nconst handleClick = () => {\r\n  setOpen(false)\r\n}\r\n\r\nconst handleClose = () => {\r\n  setOpen(true)\r\n}\r\n\r\n  return (\r\n    <div className=\"notes\">\r\n        {open ?\r\n            <div className=\"contain container\" >\r\n                <div className=\"note\" onClick={handleClick}>Take a note...</div>\r\n                <IconButton><CheckBoxOutlinedIcon /></IconButton>\r\n                <IconButton> <BrushIcon /></IconButton>\r\n                <IconButton> <ImageOutlinedIcon /></IconButton>\r\n            </div> :\r\n            <div className=\"contain container1\" style={{ backgroundColor: bgColor }}>\r\n                <div className=\"note1\" >\r\n                    <div className=\"title pd\">\r\n                        <InputBase placeholder='Title' fullWidth  onChange={(e) => setTitle(e.currentTarget.value)} />\r\n                        <IconButton onClick={handlePin}>\r\n                            {/* <img src={pin ? FilledPin : OutlinedPin} alt='pin' /> */}\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className='note pd'>\r\n                        <InputBase placeholder='Take a note...' fullWidth \r\n                            onChange={(e) => setDescription(e.currentTarget.value)} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"toolbar\">\r\n                    <DisplayIcons setBgColor={setBgColor} id={id}/>\r\n                    <div className=\"close-button\">\r\n                        <Button size=\"small\" onClick={() => {addNote(); handleClose();}}>Close</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>\r\n    );\r\n}","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\NoteFunction\\DisplayNote\\DisplayNotes.jsx",["146","147"],"import React, { useState  } from 'react'\r\nimport './DisplayNotes.css'\r\nimport DisplayIcons from '../DisplayIcon/DisplayIcons'\r\nimport UpdateNote  from '../UpdateNote/UpdateNote'\r\n\r\nconst DisplayNote = (props) => {\r\n    const [bgColor, setBgColor] = useState('#fff')\r\n    const [update, setUpdate] = useState(false)\r\n    const [note, setNote] = useState([])\r\n\r\n    const handleUpdate = (value) => {\r\n        setUpdate(true)\r\n        setNote(value)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setUpdate(false)\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"display-note\" className=\"card-body text-center\" >\r\n            {props.item.filter(item => item.isDeleted === false).map((item) => (\r\n                <div className=\"display\">\r\n                    <div className=\"addNote\" style={{ backgroundColor: item.color }}>\r\n                        <div className=\"notes1\" onClick={() => handleUpdate(item)}>\r\n                            <div className=\"title pds\">\r\n                                {item.title}\r\n                            </div>\r\n                            <div className='note pds'>\r\n                                {item.description}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"toolbar1\">\r\n                            <DisplayIcons setBgColor={setBgColor} item={item} GetNote={props.GetNote} />\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n            ))}\r\n            <UpdateNote item={note} open={update} close={handleClose} GetNote={props.GetNote}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DisplayNote","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\NoteFunction\\DisplayIcon\\DisplayIcons.jsx",["148","149","150","151","152","153"],"import React, { useState , useEffect } from 'react'\r\nimport './displayIcons.css';\r\nimport ImageOutlinedIcon from '@material-ui/icons/ImageOutlined';\r\nimport AddAlertOutlinedIcon from '@material-ui/icons/AddAlertOutlined';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport ColorLensOutlinedIcon from '@material-ui/icons/ColorLensOutlined';\r\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\r\nimport MoreVertOutlinedIcon from '@material-ui/icons/MoreVertOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Service  from '../../../Services/NoteService';\r\nimport  addReminder from '../../../Services/NoteService';\r\nimport moment from \"moment\";\r\nimport Reminder from \"../Reminder/Reminder\"\r\nimport {Chip} from \"@material-ui/core\";\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\n\r\n// const services = new Service()\r\n\r\nconst DisplayIcons = ({ setBgColor, item, GetNote  ,  setRefresh , props }) => {\r\n    const [color, setColor] = useState(false)\r\n    const [showColorList, setShowColorList] = useState(false);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    // let Bgcolor = props.color;\r\n//     var noteId = [];\r\n//   noteId.push(item.id);\r\n    \r\n\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleTrashNotes = () => {\r\n        let data = {\r\n            noteIdList: [item.id]  , isDeleted: true\r\n        }\r\n        Service.trashNotes(data).then(res => {\r\n            console.log(res)\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n        GetNote();\r\n    }\r\n\r\n    const DATA = [\r\n        { title: \"Default\", id: \"#fff\" },\r\n        { title: \"Red\", id: \"#f28b82\" },\r\n        { title: \"orange\", id: \"#fbbc04\" },\r\n        { title: \"yellow\", id: \"#fff475\" },\r\n        { title: \"green\", id: \"#ccff90\" },\r\n        { title: \"Teal\", id: \"#a7ffeb\" },\r\n        { title: \"Blue\", id: \"#a7ffeb\" },\r\n        { title: \"Dark Blue\", id: \"#aecbfa\" },\r\n        { title: \"purple\", id: \"#d7aefb\" },\r\n        { title: \"pink\", id: \"#fdcfe8\" },\r\n        { title: \"Brown\", id: \"#e6c9a8\" },\r\n        { title: \"Gray\", id: \"#e8eaed\" },\r\n    ];\r\n\r\n    const selectColor = (value) => {\r\n        props.setBgColor(value);\r\n        // Bgcolor=value;\r\n    };\r\n\r\n\r\n    const handleColor = () => {\r\n        setColor(true)\r\n    }\r\n\r\n    const handleColorOut = () => {\r\n        setColor(false)\r\n    }\r\n    // useEffect(() => {\r\n    //     if(dateTimeChip !== \"\"){\r\n    //       let data = {\r\n    //         reminder: dateTimeChip,\r\n    //         noteIdList: noteId\r\n    //       }\r\n    //       addReminder(data).then(\r\n    //         () => {setRefresh(Math.random())}\r\n    //       )\r\n    //       .catch(err=>{\r\n    //         console.warn(\"error\", err);\r\n    //       })\r\n    //     }\r\n    //     setDateTimeChip(\"\")\r\n    //   }, [dateTimeChip, noteId, setRefresh])\r\n\r\n    //   const handleDateAndTime = (value) =>{\r\n    //     let todaysDate = new Date().toString()\r\n    //     if(value.slice(0, 7) === todaysDate.slice(0, 7)){\r\n    //         return ('today '+moment(value).format(\"LT\"))\r\n    //     }\r\n    //    return (value.slice(4,10)+', '+moment(value).format(\"LT\"))\r\n    //   }\r\n\r\n    // const updateColor = () => {\r\n    //     if (props.id !== '') {\r\n    //         let data = {\r\n    //             noteIdList: [props.id], color : Bgcolor\r\n    //         }\r\n    //         Service.updateColor(\"userToken\").then(res => {\r\n    //             console.log(res)\r\n    //             props.GetNote();\r\n    //         }).catch(err => {\r\n    //             console.log(err);\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"tools\">\r\n            <IconButton aria-label=\"Remind me\" edge=\"start\">\r\n                <AddAlertOutlinedIcon fontSize=\"small\" />\r\n                {/* {item.reminder !== undefined\r\n                  ? item.reminder.map((item, index)=>{\r\n                    let data = handleDateAndTime(item)\r\n                    return(\r\n                      <Chip \r\n                        avatar={<AccessTimeIcon/>}\r\n                        key={index} \r\n                        className=\"displayReminder\"\r\n                        label={data}/>\r\n                      )})\r\n                  : null\r\n                } */}\r\n               {/* < Reminder setDateTimeChip={setDateTimeChip} item={item}/> */}\r\n            </IconButton>\r\n            <IconButton aria-label=\"Collaborator\">\r\n                <PersonAddOutlinedIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            <IconButton aria-label=\"Change color\"\r\n                 onClick={() => { handleColor(); setShowColorList(!showColorList) }}>\r\n                <ColorLensOutlinedIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            {showColorList ? (\r\n                <div className={color ? \"visible color-change\" : \"NV color-change\"}\r\n                    onMouseOver={handleColor} onMouseOut={handleColorOut} style={{ width: 150, height: 125 }}>\r\n                    {DATA.map((item) => (\r\n                        <button onMouseOver={handleColor} onClick={() => { selectColor(item.id); }}\r\n                            className=\"button-color\"\r\n                            style={{ backgroundColor: item.id }}\r\n                        ></button>\r\n                    ))}\r\n                </div>\r\n            ) : null}\r\n            {/* <div>\r\n            <Colorpillote setBgColor={setBgColor} />\r\n            </div> */}\r\n            <IconButton aria-label=\"Add image\">\r\n                <ImageOutlinedIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            <IconButton aria-label=\"Archive note\">\r\n                <ArchiveOutlinedIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            <IconButton aria-label=\"More\" onClick={handleClick}>\r\n                <MoreVertOutlinedIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}>\r\n                <MenuItem onClick={() => {\r\n                    handleClose();\r\n                    handleTrashNotes()\r\n                }}>Delete Note</MenuItem>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayIcons","C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\NoteFunction\\ColorNote\\ColorPillate.jsx",[],"C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\NoteFunction\\Reminder\\Reminder.jsx",[],"C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\NoteFunction\\UpdateNote\\UpdateNote.jsx",[],"C:\\Users\\User\\FundooNotes-React-App\\fundoo-notes\\src\\Components\\NoteFunction\\CreateNote\\Nots.jsx",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":32,"column":1,"nodeType":"160","endLine":32,"endColumn":70},{"ruleId":"158","severity":1,"message":"161","line":16,"column":1,"nodeType":"160","endLine":33,"endColumn":2},{"ruleId":"154","replacedBy":"162"},{"ruleId":"156","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":44,"column":40,"nodeType":"166","messageId":"167","endLine":44,"endColumn":42},{"ruleId":"164","severity":1,"message":"168","line":51,"column":40,"nodeType":"166","messageId":"167","endLine":51,"endColumn":42},{"ruleId":"169","severity":1,"message":"170","line":141,"column":41,"nodeType":"171","endLine":141,"endColumn":59},{"ruleId":"169","severity":1,"message":"170","line":145,"column":41,"nodeType":"171","endLine":145,"endColumn":73},{"ruleId":"169","severity":1,"message":"170","line":158,"column":41,"nodeType":"171","endLine":158,"endColumn":59},{"ruleId":"169","severity":1,"message":"170","line":165,"column":41,"nodeType":"171","endLine":165,"endColumn":73},{"ruleId":"172","severity":1,"message":"173","line":10,"column":10,"nodeType":"174","messageId":"175","endLine":10,"endColumn":11,"suggestions":"176"},{"ruleId":"172","severity":1,"message":"173","line":10,"column":26,"nodeType":"174","messageId":"175","endLine":10,"endColumn":27,"suggestions":"177"},{"ruleId":"178","severity":1,"message":"179","line":61,"column":9,"nodeType":"180","messageId":"167","endLine":61,"endColumn":18},{"ruleId":"181","severity":1,"message":"182","line":64,"column":7,"nodeType":"183","messageId":"184","endLine":64,"endColumn":18},{"ruleId":"181","severity":1,"message":"185","line":13,"column":8,"nodeType":"183","messageId":"184","endLine":13,"endColumn":24},{"ruleId":"181","severity":1,"message":"186","line":20,"column":8,"nodeType":"183","messageId":"184","endLine":20,"endColumn":16},{"ruleId":"164","severity":1,"message":"165","line":68,"column":37,"nodeType":"166","messageId":"167","endLine":68,"endColumn":39},{"ruleId":"164","severity":1,"message":"165","line":78,"column":40,"nodeType":"166","messageId":"167","endLine":78,"endColumn":42},{"ruleId":"169","severity":1,"message":"170","line":216,"column":64,"nodeType":"171","endLine":216,"endColumn":71},{"ruleId":"169","severity":1,"message":"170","line":216,"column":133,"nodeType":"171","endLine":216,"endColumn":156},{"ruleId":"181","severity":1,"message":"187","line":1,"column":18,"nodeType":"183","messageId":"184","endLine":1,"endColumn":26},{"ruleId":"181","severity":1,"message":"188","line":1,"column":28,"nodeType":"183","messageId":"184","endLine":1,"endColumn":37},{"ruleId":"181","severity":1,"message":"189","line":10,"column":10,"nodeType":"183","messageId":"184","endLine":10,"endColumn":17},{"ruleId":"181","severity":1,"message":"190","line":10,"column":35,"nodeType":"183","messageId":"184","endLine":10,"endColumn":45},{"ruleId":"181","severity":1,"message":"191","line":15,"column":5,"nodeType":"183","messageId":"184","endLine":15,"endColumn":14},{"ruleId":"178","severity":1,"message":"192","line":61,"column":5,"nodeType":"180","messageId":"167","endLine":61,"endColumn":15},{"ruleId":"181","severity":1,"message":"193","line":83,"column":11,"nodeType":"183","messageId":"184","endLine":83,"endColumn":16},{"ruleId":"181","severity":1,"message":"194","line":84,"column":18,"nodeType":"183","messageId":"184","endLine":84,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":93,"column":17,"nodeType":"171","endLine":93,"endColumn":30},{"ruleId":"181","severity":1,"message":"195","line":7,"column":8,"nodeType":"183","messageId":"184","endLine":7,"endColumn":13},{"ruleId":"181","severity":1,"message":"196","line":17,"column":17,"nodeType":"183","messageId":"184","endLine":17,"endColumn":25},{"ruleId":"172","severity":1,"message":"173","line":26,"column":10,"nodeType":"174","messageId":"175","endLine":26,"endColumn":11,"suggestions":"197"},{"ruleId":"172","severity":1,"message":"173","line":26,"column":26,"nodeType":"174","messageId":"175","endLine":26,"endColumn":27,"suggestions":"198"},{"ruleId":"199","severity":1,"message":"200","line":206,"column":7,"nodeType":"201","messageId":"202","endLine":206,"endColumn":52},{"ruleId":"169","severity":1,"message":"170","line":385,"column":29,"nodeType":"171","endLine":385,"endColumn":40},{"ruleId":"169","severity":1,"message":"170","line":386,"column":29,"nodeType":"171","endLine":386,"endColumn":81},{"ruleId":"164","severity":1,"message":"165","line":23,"column":19,"nodeType":"166","messageId":"167","endLine":23,"endColumn":21},{"ruleId":"164","severity":1,"message":"165","line":26,"column":26,"nodeType":"166","messageId":"167","endLine":26,"endColumn":28},{"ruleId":"203","severity":1,"message":"204","line":49,"column":15,"nodeType":"205","endLine":49,"endColumn":56},{"ruleId":"158","severity":1,"message":"159","line":71,"column":2,"nodeType":"160","endLine":71,"endColumn":118},{"ruleId":"181","severity":1,"message":"206","line":1,"column":28,"nodeType":"183","messageId":"184","endLine":1,"endColumn":38},{"ruleId":"181","severity":1,"message":"207","line":44,"column":9,"nodeType":"183","messageId":"184","endLine":44,"endColumn":16},{"ruleId":"181","severity":1,"message":"208","line":45,"column":10,"nodeType":"183","messageId":"184","endLine":45,"endColumn":13},{"ruleId":"181","severity":1,"message":"209","line":46,"column":10,"nodeType":"183","messageId":"184","endLine":46,"endColumn":17},{"ruleId":"181","severity":1,"message":"210","line":7,"column":12,"nodeType":"183","messageId":"184","endLine":7,"endColumn":19},{"ruleId":"169","severity":1,"message":"170","line":23,"column":39,"nodeType":"171","endLine":23,"endColumn":72},{"ruleId":"181","severity":1,"message":"188","line":1,"column":28,"nodeType":"183","messageId":"184","endLine":1,"endColumn":37},{"ruleId":"181","severity":1,"message":"211","line":13,"column":9,"nodeType":"183","messageId":"184","endLine":13,"endColumn":20},{"ruleId":"181","severity":1,"message":"212","line":14,"column":8,"nodeType":"183","messageId":"184","endLine":14,"endColumn":14},{"ruleId":"181","severity":1,"message":"213","line":15,"column":8,"nodeType":"183","messageId":"184","endLine":15,"endColumn":16},{"ruleId":"181","severity":1,"message":"214","line":16,"column":9,"nodeType":"183","messageId":"184","endLine":16,"endColumn":13},{"ruleId":"181","severity":1,"message":"215","line":17,"column":8,"nodeType":"183","messageId":"184","endLine":17,"endColumn":22},"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Unexpected default export of anonymous function",["216"],["217"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["218","219"],["220","221"],"no-dupe-keys","Duplicate key 'forgetMsg'.","ObjectExpression","no-unused-vars","'formIsValid' is assigned a value but never used.","Identifier","unusedVar","'LockOutlinedIcon' is defined but never used.","'Snackbar' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Divider' is defined but never used.","'Typography' is defined but never used.","'checkOpen' is assigned a value but never used.","Duplicate key 'menuButton'.","'theme' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'Notte' is defined but never used.","'Checkbox' is defined but never used.",["222","223"],["224","225"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useContext' is defined but never used.","'classes' is assigned a value but never used.","'pin' is assigned a value but never used.","'loading' is assigned a value but never used.","'bgColor' is assigned a value but never used.","'addReminder' is defined but never used.","'moment' is defined but never used.","'Reminder' is defined but never used.","'Chip' is defined but never used.","'AccessTimeIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"226","fix":"227","desc":"228"},{"messageId":"229","fix":"230","desc":"231"},{"messageId":"226","fix":"232","desc":"228"},{"messageId":"229","fix":"233","desc":"231"},{"messageId":"226","fix":"234","desc":"228"},{"messageId":"229","fix":"235","desc":"231"},{"messageId":"226","fix":"236","desc":"228"},{"messageId":"229","fix":"237","desc":"231"},"removeEscape",{"range":"238","text":"239"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"240","text":"241"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"242","text":"239"},{"range":"243","text":"241"},{"range":"244","text":"239"},{"range":"245","text":"241"},{"range":"246","text":"239"},{"range":"247","text":"241"},[381,382],"",[381,381],"\\",[397,398],[397,397],[1208,1209],[1208,1208],[1224,1225],[1224,1224]]